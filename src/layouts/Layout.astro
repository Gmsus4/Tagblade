---
import "../styles/global.css";
import 'aos/dist/aos.css';
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<title>Tagblade | Sitios web que combinan diseño y rendimiento</title>
		
		<!-- SEO básico -->
		<meta name="google-site-verification" content="lUBO0nBDr-XImk45olFVE3j4NjwbaKMkxoZLXDLauPU" />
		<meta name="msvalidate.01" content="80301AC061BD4D51EEF38F1D282B8D11" />		
		<meta name="description" content="Tagblade diseña y desarrolla sitios web personalizados que combinan estética, velocidad y propósito para ayudarte a crecer en línea." />
		<meta name="keywords" content="desarrollo web, diseño web, sitios web, sitios responsivos, SEO, Tagblade, páginas web" />
		<meta name="author" content="Tagblade" />
		<link rel="canonical" href="https://www.tagblade.com/" />
	
		<!-- Open Graph -->
		<meta property="og:title" content="Tagblade | Sitios web que combinan diseño y rendimiento" />
		<meta property="og:description" content="Diseñamos y desarrollamos sitios web personalizados con un enfoque en estética, velocidad y propósito." />
		<meta property="og:image" content="/favicon.svg" />
		<meta property="og:url" content="https://www.tagblade.com/" />
		<meta property="og:type" content="website" />
	
		<!-- Favicon -->
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
	
		<!-- Generador Astro -->
		<meta name="generator" content={Astro.generator} />
		
		<!-- AOS estilos -->
		<link
		  rel="stylesheet"
		  href="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css"
		/>

		<!-- Anti-parpadeo para tema oscuro (debe estar ANTES de cualquier CSS) -->
		<script is:inline>
			// Aplicar tema inmediatamente para evitar parpadeo
			const theme = (() => {
			// Nota: Cambiamos 'color-theme' a 'theme' para consistencia con el toggle
			if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
				return localStorage.getItem('theme');
			}
			return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
			})();
			
			// Aplicar clase antes de que se renderice cualquier parte de la página
			if (theme === 'dark') {
			document.documentElement.classList.add('dark');
			} else {
			document.documentElement.classList.remove('dark');
			}
			
			// Añadir un estilo para prevenir el parpadeo
			document.documentElement.style.visibility = 'hidden';
			window.addEventListener('DOMContentLoaded', () => {
			document.documentElement.style.visibility = '';
			});
 		</script>

		<script>
			// On page load or when changing themes, best to add inline in `head` to avoid FOUC
			if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
				document.documentElement.classList.add('dark');
			} else {
				document.documentElement.classList.remove('dark')
			}
		</script>
	  </head>
	
	<body>
		<slot />

		<!-- ScrollSpy -->
		<script>
			document.addEventListener("DOMContentLoaded", () => {
				const sec = document.querySelectorAll("section");
				const links = document.querySelectorAll("nav a");
		
				window.addEventListener("scroll", () => {
				sec.forEach((section) => {
					const top = window.scrollY;
					const offset = section.offsetTop - 80;
					const height = section.offsetHeight;
					const id = section.getAttribute("id");
		
					if (top >= offset && top < offset + height) {
					links.forEach((link) => link.classList.remove("active"));
					const activeLink = document.querySelector(`nav a[href="#${id}"]`);
					if (activeLink) activeLink.classList.add("active");
					}
				});
				});
			});
		</script>

		<!-- AOS -->
		<script>
			// Importación de AOS
			import AOS from 'aos';
			
			// Inicialización
			AOS.init({
			  duration: 800,
			  easing: 'ease-in-out',
			  once: true
			});
		  </script>

		<!-- Flowbite -->
		<script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>