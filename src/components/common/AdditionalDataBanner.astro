---
export interface Props {
  title: string;
  description: string;
  linkText?: string;
  linkUrl?: string;
  iconType: 'info' | 'map' | 'phone' | 'email' | 'calendar';
  accentColor: 'blue' | 'purple' | 'orange' | 'red' | 'teal';
}

const { 
  title, 
  description, 
  linkText, 
  linkUrl, 
  iconType = 'info',
  accentColor = 'blue'
} = Astro.props;

// Color mapping for different accent colors
const colorMap = {
  blue: {
    border: 'border-blue-500 dark:border-blue-700',
    bg: 'bg-blue-50 dark:bg-blue-950',
    iconColor: 'text-blue-600 dark:text-blue-400',
    titleColor: 'text-blue-800 dark:text-blue-300',
    textColor: 'text-blue-700 dark:text-blue-400',
    buttonBg: 'bg-blue-600 hover:bg-blue-700'
  },
  purple: {
    border: 'border-purple-500 dark:border-purple-700',
    bg: 'bg-purple-50 dark:bg-purple-950',
    iconColor: 'text-purple-600 dark:text-purple-400',
    titleColor: 'text-purple-800 dark:text-purple-300',
    textColor: 'text-purple-700 dark:text-purple-400',
    buttonBg: 'bg-purple-600 hover:bg-purple-700'
  },
  orange: {
    border: 'border-orange-500 dark:border-orange-700',
    bg: 'bg-orange-50 dark:bg-orange-950',
    iconColor: 'text-orange-600 dark:text-orange-400',
    titleColor: 'text-orange-800 dark:text-orange-300',
    textColor: 'text-orange-700 dark:text-orange-400',
    buttonBg: 'bg-orange-600 hover:bg-orange-700'
  },
  red: {
    border: 'border-red-500 dark:border-red-700',
    bg: 'bg-red-50 dark:bg-red-950',
    iconColor: 'text-red-600 dark:text-red-400',
    titleColor: 'text-red-800 dark:text-red-300',
    textColor: 'text-red-700 dark:text-red-400',
    buttonBg: 'bg-red-600 hover:bg-red-700'
  },
  teal: {
    border: 'border-teal-500 dark:border-teal-700',
    bg: 'bg-teal-50 dark:bg-teal-950',
    iconColor: 'text-teal-600 dark:text-teal-400',
    titleColor: 'text-teal-800 dark:text-teal-300',
    textColor: 'text-teal-700 dark:text-teal-400',
    buttonBg: 'bg-teal-600 hover:bg-teal-700'
  }
};

// Icons mapping
const iconMap = {
  info: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
  </svg>`,
  map: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
  </svg>`,
  phone: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
  </svg>`,
  email: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
  </svg>`,
  calendar: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
  </svg>`
};

const colors = colorMap[accentColor];
const icon = iconMap[iconType];
---

<!-- Additional Data Banner -->
<div 
    class={`p-4 border-l-4 ${colors.border} ${colors.bg} rounded-r-lg shadow-md`}
    data-aos="fade-up" 
    data-aos-duration="600" 
    data-aos-delay="100"
>
    <div class="flex items-center">
      <div class={colors.iconColor} set:html={icon} />
      <div>
        <h3 class={`text-sm font-medium ${colors.titleColor}`}>{title}</h3>
        <p class={`text-sm ${colors.textColor} mt-1`}>
          {description}
        </p>
        {linkText && linkUrl && (
          <a 
            href={linkUrl} 
            target="_blank" 
            rel="noopener noreferrer"
            class={`inline-flex items-center mt-2 px-4 py-2 ${colors.buttonBg} text-white text-sm font-medium rounded-lg transition duration-300`}
          >
            {linkText}
            <svg class="ml-2 w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path>
            </svg>
          </a>
        )}
      </div>
    </div>
</div>